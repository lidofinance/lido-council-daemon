version: '3.7'

services:
  council_daemon_prometheus:
    image: prom/prometheus:v2.44.0
    container_name: council_daemon_prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
    command: --config.file=/etc/prometheus/prometheus.yml --enable-feature=remote-write-receiver

  council_daemon_grafana:
    image: grafana/grafana-oss:9.1.5
    container_name: council_daemon_grafana
    restart: unless-stopped
    ports:
      - 8001:3000
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    depends_on:
      - council_daemon_prometheus

  keys_api_service_db:
    image: postgres:14-alpine
    platform: linux/arm64/v8
    container_name: keys_api_service_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${KEYS_API_DB_NAME}
      - POSTGRES_USER=${KEYS_API_DB_USER}
      - POSTGRES_PASSWORD=${KEYS_API_DB_PASSWORD}
    ports:
      - ${KEYS_API_DB_PORT}:5432
    volumes:
      - ./.volumes/pgdata-${CHAIN_ID}/:/var/lib/postgresql/data

  keys_api_service_api:
    image: lidofinance/lido-keys-api:0.10.1
    platform: linux/amd64
    container_name: keys_api_service_api
    ports:
      - '127.0.0.1:${KEYS_API_PORT}:3001'
    environment:
      - PORT=3001
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - CHAIN_ID=${CHAIN_ID}
      - PROVIDERS_URLS=${RPC_URL}
      - VALIDATOR_REGISTRY_ENABLE=false
      - DB_NAME=${KEYS_API_DB_NAME}
      - DB_PORT=5432
      - DB_HOST=keys_api_service_db
      - DB_USER=${KEYS_API_DB_USER}
      - DB_PASSWORD=${KEYS_API_DB_PASSWORD}
    depends_on:
      - keys_api_service_db
  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.test.yml
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
      - 15674:15674
